basePath: /api/v1
definitions:
  cchalop1_com_deploy_internal_api_dto.Env:
    properties:
      isSecret:
        type: boolean
      name:
        type: string
      value:
        type: string
    type: object
  cchalop1_com_deploy_internal_api_dto.GithubIsConnected:
    properties:
      isConnected:
        type: boolean
    type: object
  cchalop1_com_deploy_internal_api_dto.ResponseApi:
    properties:
      message:
        type: string
    type: object
  internal_api_handlers.CreateRepoRequest:
    properties:
      repoUrl:
        type: string
    type: object
  internal_api_handlers.ServiceExposeSettings:
    properties:
      exposePort:
        type: string
      isExposed:
        type: boolean
      subDomain:
        type: string
      tls:
        type: boolean
    type: object
  internal_api_handlers.ServiceResponse:
    properties:
      currentPath:
        type: string
      dockerHubUrl:
        type: string
      envs:
        items:
          $ref: "#/definitions/cchalop1_com_deploy_internal_api_dto.Env"
        type: array
      exposeSettings:
        $ref: "#/definitions/internal_api_handlers.ServiceExposeSettings"
      id:
        type: string
      imageName:
        type: string
      imageUrl:
        type: string
      name:
        type: string
      status:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
externalDocs:
  description: GitHub Repository
  url: https://github.com/cchalop1/JustDeploy
host: localhost:5915
info:
  contact:
    email: support@justdeploy.dev
    name: Cl√©ment Chalopin
    url: https://github.com/cchalop1/JustDeploy
  description:
    JustDeploy is a PaaS tool designed to simplify the lives of developers.
    It allows you to easily deploy your projects and databases using Docker. JustDeploy
    fetches your GitHub repository and deploys your application using your Docker
    and Docker Compose configurations, all while deploying to any VPS of your choice
    without vendor lock-in.
  license:
    name: AGPL-3.0 License
    url: https://github.com/cchalop1/JustDeploy/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: JustDeploy API
  version: "1.0"
paths:
  /api/v1/deploy:
    post:
      consumes:
        - application/json
      description: Deploys the current application using the deploy service
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deployed
          schema:
            $ref: "#/definitions/cchalop1_com_deploy_internal_api_dto.ResponseApi"
        "500":
          description: Internal server error with error message
          schema:
            $ref: "#/definitions/cchalop1_com_deploy_internal_api_dto.ResponseApi"
      summary: Deploy application
      tags:
        - deployment
  /api/v1/github/connect/{code}:
    post:
      consumes:
        - application/json
      description: Connects the application to GitHub using an authorization code
      parameters:
        - description: GitHub authorization code
          in: path
          name: code
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Connection result
          schema: {}
        "400":
          description: Code is required
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Connect GitHub application
      tags:
        - github
  /api/v1/github/is-connected:
    get:
      consumes:
        - application/json
      description: Checks if the application is connected to GitHub
      produces:
        - application/json
      responses:
        "200":
          description: Connection status
          schema:
            $ref: "#/definitions/cchalop1_com_deploy_internal_api_dto.GithubIsConnected"
      summary: Check GitHub connection status
      tags:
        - github
  /api/v1/github/repos:
    get:
      consumes:
        - application/json
      description: Retrieves all GitHub repositories accessible to the application
      produces:
        - application/json
      responses:
        "200":
          description: List of GitHub repositories
          schema:
            items: {}
            type: array
      summary: Get GitHub repositories
      tags:
        - github
  /api/v1/github/save-token/{installationId}:
    post:
      consumes:
        - application/json
      description: Saves a GitHub access token using the provided installation ID
      parameters:
        - description: GitHub installation ID
          in: path
          name: installationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Access token saved successfully
          schema:
            type: string
        "400":
          description: Installation ID is required
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Save GitHub access token
      tags:
        - github
  /api/v1/repo:
    post:
      consumes:
        - application/json
      description: Creates a new service by cloning and configuring a GitHub repository
      parameters:
        - description: Repository URL information
          in: body
          name: request
          required: true
          schema:
            $ref: "#/definitions/internal_api_handlers.CreateRepoRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Service created successfully
          schema:
            $ref: "#/definitions/internal_api_handlers.ServiceResponse"
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new service from a GitHub repository
      tags:
        - repository
  /api/v1/services:
    get:
      consumes:
        - application/json
      description: Retrieves all services managed by the application
      produces:
        - application/json
      responses:
        "200":
          description: List of services
          schema:
            items:
              $ref: "#/definitions/internal_api_handlers.ServiceResponse"
            type: array
      summary: Get all services
      tags:
        - services
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
